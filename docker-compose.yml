version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pottur-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pottur_school_connect
      POSTGRES_USER: pottur_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-your-secure-password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./supabase/migrations:/migrations
    ports:
      - "5432:5432"
    networks:
      - pottur-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pottur_user -d pottur_school_connect"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: pottur-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis-password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pottur-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Node.js/Express)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: pottur-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://pottur_user:${DATABASE_PASSWORD:-your-secure-password}@postgres:5432/pottur_school_connect
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis-password}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key-here}
      SESSION_SECRET: ${SESSION_SECRET:-your-session-secret-here}
      PORT: 3001
    volumes:
      - uploads_data:/var/www/pottur-school/uploads
      - ./logs:/app/logs
    ports:
      - "3001:3001"
    networks:
      - pottur-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React/Nginx)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pottur-frontend
    restart: unless-stopped
    environment:
      VITE_SUPABASE_URL: ${VITE_SUPABASE_URL:-http://localhost:3001}
      VITE_SUPABASE_PUBLISHABLE_KEY: ${VITE_SUPABASE_PUBLISHABLE_KEY:-your-production-anon-key}
      VITE_APP_DOMAIN: ${VITE_APP_DOMAIN:-http://localhost}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:3001/api}
    volumes:
      - uploads_data:/var/www/pottur-school/uploads:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - pottur-network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database backup service
  backup:
    image: postgres:15-alpine
    container_name: pottur-backup
    restart: "no"
    environment:
      POSTGRES_DB: pottur_school_connect
      POSTGRES_USER: pottur_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-your-secure-password}
      PGPASSWORD: ${DATABASE_PASSWORD:-your-secure-password}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh
    networks:
      - pottur-network
    depends_on:
      postgres:
        condition: service_healthy
    command: ["/bin/sh", "/backup.sh"]
    profiles:
      - backup

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  pottur-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16