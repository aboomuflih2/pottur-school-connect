# Docker Compose configuration for VPS deployment with self-hosted Supabase
# VPS IP: 63.250.52.6
# This configuration assumes Supabase is already running on the VPS

version: '3.8'

services:
  # Frontend (React/Nginx) - connects to external Supabase
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pottur-frontend-vps
    restart: unless-stopped
    environment:
      # Self-hosted Supabase configuration
      VITE_SUPABASE_URL: "http://63.250.52.6:8000"
      VITE_SUPABASE_PUBLISHABLE_KEY: ${VITE_SUPABASE_PUBLISHABLE_KEY}
      VITE_SUPABASE_SERVICE_ROLE_KEY: ${VITE_SUPABASE_SERVICE_ROLE_KEY}
      VITE_SUPABASE_STUDIO_URL: "http://63.250.52.6:3000"
      
      # Application configuration
      VITE_APP_DOMAIN: ${VITE_APP_DOMAIN:-http://63.250.52.6}
      NODE_ENV: production
      
      # Database configuration (for direct access if needed)
      DATABASE_URL: postgresql://postgres:${DATABASE_PASSWORD}@63.250.52.6:5432/postgres
    volumes:
      - uploads_data:/var/www/pottur-school/uploads:ro
      - ./nginx/vps.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - pottur-vps-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching (optional - can be used for session storage)
  redis:
    image: redis:7-alpine
    container_name: pottur-redis-vps
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis-password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pottur-vps-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional - for SSL termination and load balancing)
  nginx-proxy:
    image: nginx:alpine
    container_name: pottur-nginx-proxy
    restart: unless-stopped
    volumes:
      - ./nginx/vps-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - pottur-vps-network
    depends_on:
      - frontend
    profiles:
      - proxy

  # Database backup service (connects to external Supabase PostgreSQL)
  backup:
    image: postgres:15-alpine
    container_name: pottur-backup-vps
    restart: "no"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGPASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST: 63.250.52.6
      POSTGRES_PORT: 5432
    volumes:
      - ./backups:/backups
      - ./scripts/backup-vps.sh:/backup.sh
    networks:
      - pottur-vps-network
    command: ["/bin/sh", "/backup.sh"]
    profiles:
      - backup

  # Monitoring service (optional)
  monitoring:
    image: prom/node-exporter:latest
    container_name: pottur-monitoring
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - pottur-vps-network
    profiles:
      - monitoring

volumes:
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  pottur-vps-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# Health check for external services
x-healthcheck-external: &healthcheck-external
  test: ["CMD", "curl", "-f", "http://63.250.52.6:8000/health"]
  interval: 60s
  timeout: 10s
  retries: 3
  start_period: 30s